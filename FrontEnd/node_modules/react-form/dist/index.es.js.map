{"version":3,"file":"index.es.js","sources":["../src/hooks/useAsyncDebounce.js","../src/hooks/useFormContext.js","../src/hooks/useFormElement.js","../src/utils.js","../src/hooks/useForm.js","../src/hooks/useFieldScope.js","../src/hooks/useField.js"],"sourcesContent":["import React from 'react'\n\nexport default function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n  debounceRef.current.defaultFn = defaultFn\n  debounceRef.current.defaultWait = defaultWait\n\n  const debounce = React.useCallback(\n    async (\n      fn = debounceRef.current.defaultFn,\n      wait = debounceRef.current.defaultWait\n    ) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise(resolve => {\n          debounceRef.current.resolve = resolve\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await fn())\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, wait)\n\n      return debounceRef.current.promise\n    },\n    []\n  )\n\n  return debounce\n}\n","import React from 'react'\n//\n\nconst formContext = React.createContext()\n\nexport function FormContextProvider({ value, children }) {\n  return <formContext.Provider value={value}>{children}</formContext.Provider>\n}\n\nexport default function useFormContext(manualFormContext) {\n  let formApi = React.useContext(formContext)\n\n  if (manualFormContext) {\n    return manualFormContext\n  }\n\n  if (!formApi) {\n    throw new Error(`You are trying to use the form API outside of a form!`)\n  }\n\n  return formApi\n}\n","import React from 'react'\n//\n\nimport { FormContextProvider } from './useFormContext'\n\nexport default function useFormElement(contextValue) {\n  const FormRef = React.useRef()\n  const FormApiRef = React.useRef()\n\n  FormApiRef.current = contextValue\n\n  // Create a new form element\n  if (!FormRef.current) {\n    FormRef.current = function Form({ children, noFormElement, ...rest }) {\n      const {\n        handleSubmit,\n        meta: { isSubmitting },\n        debugForm,\n      } = FormApiRef.current\n\n      return (\n        <FormContextProvider value={FormApiRef.current}>\n          {noFormElement ? (\n            children\n          ) : (\n            <form onSubmit={handleSubmit} disabled={isSubmitting} {...rest}>\n              {children}\n              {debugForm ? (\n                <div\n                  style={{\n                    margin: '2rem 0',\n                  }}\n                >\n                  <div\n                    style={{\n                      fontWeight: 'bolder',\n                    }}\n                  >\n                    Form State\n                  </div>\n                  <pre>\n                    <code>\n                      {JSON.stringify(\n                        { ...FormApiRef.current, formContext: undefined },\n                        safeStringifyReplace(new Set()),\n                        2\n                      )}\n                    </code>\n                  </pre>\n                </div>\n              ) : null}\n            </form>\n          )}\n        </FormContextProvider>\n      )\n    }\n  }\n\n  // Return the form element\n  return FormRef.current\n}\n\nfunction safeStringifyReplace(set) {\n  return (key, value) => {\n    if (typeof value === 'object' || Array.isArray(value)) {\n      if (set.has(value)) {\n        return '(circular value)'\n      }\n      set.add(value)\n    }\n    return typeof value === 'function' ? undefined : value\n  }\n}\n","export function splitFormProps({\n  field,\n  defaultValue,\n  defaultIsTouched,\n  defaultError,\n  defaultMeta,\n  validatePristine,\n  validate,\n  onSubmit,\n  defaultValues,\n  filterValue,\n  debugForm,\n  ...rest\n}) {\n  return [\n    field,\n    {\n      defaultValue,\n      defaultIsTouched,\n      defaultError,\n      defaultMeta,\n      validatePristine,\n      validate,\n      onSubmit,\n      defaultValues,\n      filterValue,\n      debugForm,\n    },\n    rest,\n  ]\n}\n\n// Utils\n\nexport function getBy(obj, path) {\n  if (!path) {\n    throw new Error('A path string is required to use getBy')\n  }\n  const pathArray = makePathArray(path)\n  const pathObj = pathArray\n  return pathObj.reduce((current, pathPart) => {\n    if (typeof current !== 'undefined') {\n      return current[pathPart]\n    }\n    return undefined\n  }, obj)\n}\n\nexport function setBy(obj, path, updater) {\n  path = makePathArray(path)\n\n  function doSet(parent) {\n    if (!path.length) {\n      return typeof updater === 'function' ? updater(parent) : updater\n    }\n\n    const key = path.shift()\n\n    if (typeof key === 'string') {\n      if (typeof parent === 'object') {\n        return {\n          ...parent,\n          [key]: doSet(parent[key]),\n        }\n      }\n      return {\n        [key]: doSet(),\n      }\n    }\n\n    if (typeof key === 'number') {\n      if (Array.isArray(parent)) {\n        const prefix = parent.slice(0, key)\n        return [\n          ...(prefix.length ? prefix : new Array(key)),\n          doSet(parent[key]),\n          ...parent.slice(key + 1),\n        ]\n      }\n      return [...new Array(key), doSet()]\n    }\n\n    throw new Error('Uh oh!')\n  }\n\n  return doSet(obj)\n}\n\nexport function getFieldID(str) {\n  return makePathArray(str).join('_')\n}\n\nconst reFindNumbers0 = /^(\\d*)$/gm\nconst reFindNumbers1 = /\\.(\\d*)\\./gm\nconst reFindNumbers2 = /^(\\d*)\\./gm\nconst reFindNumbers3 = /\\.(\\d*$)/gm\nconst reFindMultiplePeriods = /\\.{2,}/gm\n\nfunction makePathArray(str) {\n  return str\n    .replace('[', '')\n    .replace(']', '.')\n    .replace(reFindNumbers0, '__int__$1')\n    .replace(reFindNumbers1, '.__int__$1.')\n    .replace(reFindNumbers2, '__int__$1.')\n    .replace(reFindNumbers3, '.__int__$1')\n    .replace(reFindMultiplePeriods, '.')\n    .split('.')\n    .map(d => {\n      if (d.indexOf('__int__') === 0) {\n        return parseInt(d.substring('__int__'.length), 10)\n      }\n      return d\n    })\n}\n\nfunction loopObject(obj, fn, callback) {\n  Object.keys(obj).forEach(key => {\n    callback(fn(obj[key], key), key)\n  })\n}\n\nexport function someObject(obj, fn) {\n  let found = false\n\n  loopObject(obj, fn, (result, key) => {\n    if (found) {\n      return\n    }\n    if (result) {\n      found = true\n    }\n  })\n\n  return found\n}\n","import React from 'react'\n//\nimport useAsyncDebounce from './useAsyncDebounce'\nimport useFormElement from './useFormElement'\nimport { someObject, getBy, setBy, getFieldID } from '../utils'\n\nconst defaultDefaultValue = {}\n\nfunction makeState(decor) {\n  return {\n    meta: {\n      isSubmitting: false,\n      isTouched: false,\n      isSubmitted: false,\n      submissionAttempts: 0,\n    },\n    __fieldMeta: {},\n    ...decor,\n  }\n}\n\nexport default function useForm({\n  onSubmit,\n  defaultValues = defaultDefaultValue,\n  validate,\n  validatePristine,\n  debugForm,\n} = {}) {\n  let [{ values, meta, __fieldMeta }, setState] = React.useState(() =>\n    makeState({\n      values: defaultValues,\n    })\n  )\n\n  const [shouldResubmit, setShouldResubmit] = React.useState(false)\n  const apiRef = React.useRef()\n  const metaRef = React.useRef({})\n  const __fieldMetaRefsRef = React.useRef({})\n\n  // Keep validate up to date with the latest version\n  metaRef.current.validate = validate\n\n  const fieldsAreValidating = someObject(\n    __fieldMeta,\n    field => field && field.isValidating\n  )\n  const fieldsAreValid = !someObject(__fieldMeta, field => field && field.error)\n\n  // Can we submit this form?\n  const isValid = !fieldsAreValidating && fieldsAreValid && !meta.error\n\n  const canSubmit = isValid && !meta.isValidating && !meta.isSubmitting\n\n  // Decorate form meta\n  meta = React.useMemo(\n    () => ({\n      ...meta,\n      fieldsAreValidating,\n      fieldsAreValid,\n      isValid,\n      canSubmit,\n    }),\n    [meta, fieldsAreValidating, fieldsAreValid, isValid, canSubmit]\n  )\n\n  // We want the apiRef to change every time state updates\n  const api = React.useMemo(\n    () => ({\n      values,\n      meta,\n      __fieldMeta,\n      debugForm,\n    }),\n    [debugForm, __fieldMeta, meta, values]\n  )\n  // Keep the apiRef up to date with the latest version of the api\n  apiRef.current = api\n\n  const reset = React.useCallback(() => {\n    setState(() =>\n      makeState({\n        values: defaultValues,\n      })\n    )\n  }, [defaultValues, setState])\n\n  // On submit\n  const handleSubmit = React.useCallback(async (e = {}) => {\n    if (e.persist) e.persist()\n    if (e.preventDefault) e.preventDefault()\n\n    // This lets sub-forms with form elements (despite them being invalid HTML)\n    // handle submissions without triggering parent forms\n    if (e.__handled) {\n      return\n    }\n    e.__handled = true\n\n    // Don't let invalid forms submit\n    if (!apiRef.current.meta.isValid) {\n      // If the form can't submit, let's trigger all of the fields\n      // to be touched. Thus, their validations will run\n      apiRef.current.setMeta({ isSubmitting: false })\n      return\n    }\n\n    apiRef.current.setMeta({ isSubmitting: true })\n\n    let needsResubmit = false\n\n    const fieldValidationPromises = []\n\n    Object.keys(apiRef.current.__fieldMetaRefs).forEach(key => {\n      const { current: fieldMeta } = apiRef.current.__fieldMetaRefs[key]\n      Object.keys(fieldMeta.instanceRefs).forEach(key => {\n        const { current: fieldInstance } = fieldMeta.instanceRefs[key]\n        // If any fields are not touched\n        if (!fieldInstance.meta.isTouched) {\n          // Mark them as touched\n          fieldInstance.setMeta({ isTouched: true })\n          // Likewise, if they need validation\n          if (fieldInstance.__validate) {\n            // Run their validation and keep track of the\n            // promise\n            fieldValidationPromises.push(fieldInstance.runValidation())\n          }\n        }\n      })\n    })\n\n    // If any validation needed to be run\n    if (fieldValidationPromises.length) {\n      // Mark for resubmission\n      needsResubmit = true\n    }\n\n    if (!apiRef.current.meta.isTouched) {\n      // Mark for resubmission\n      needsResubmit = true\n\n      // Mark the form as touched\n      apiRef.current.setMeta(old => ({\n        ...old,\n        isTouched: true,\n      }))\n    }\n\n    if (needsResubmit) {\n      // Wait for any field validations to complete\n      await Promise.all(fieldValidationPromises)\n      // Be sure to run validation for the form\n      // and wait for it to complete\n      await apiRef.current.runValidation()\n      // Then rerun the submission attempt\n      e.__handled = false\n      setShouldResubmit(e || true)\n      // Do not continue\n      return\n    }\n\n    apiRef.current.setMeta(old => ({\n      ...old,\n      // Submittion attempts mark the form as not submitted\n      isSubmitted: false,\n      // Count submission attempts\n      submissionAttempts: old.submissionAttempts + 1,\n    }))\n\n    try {\n      // Run the submit code\n      await apiRef.current.onSubmit(apiRef.current.values, apiRef.current)\n\n      apiRef.current.setMeta({ isSubmitted: true })\n    } catch (err) {\n      throw err\n    } finally {\n      apiRef.current.setMeta({ isSubmitting: false })\n    }\n  }, [])\n\n  // Create a debounce for this field hook instance (not all instances)\n  const debounce = useAsyncDebounce()\n\n  const setMeta = React.useCallback(\n    updater => {\n      setState(old => ({\n        ...old,\n        meta:\n          typeof updater === 'function'\n            ? updater(old.meta)\n            : { ...old.meta, ...updater },\n      }))\n    },\n    [setState]\n  )\n\n  const runValidation = React.useCallback(() => {\n    if (!metaRef.current.validate) {\n      return\n    }\n    apiRef.current.setMeta({ isValidating: true })\n\n    // Use the validationCount for all field instances to\n    // track freshness of the validation\n    const id = (metaRef.current.validationCount || 0) + 1\n    metaRef.current.validationCount = id\n\n    const checkLatest = () => id === metaRef.current.validationCount\n\n    if (!metaRef.current.validationPromise) {\n      metaRef.current.validationPromise = new Promise((resolve, reject) => {\n        metaRef.current.validationResolve = resolve\n        metaRef.current.validationReject = reject\n      })\n    }\n\n    const doValidation = async () => {\n      try {\n        const error = await metaRef.current.validate(\n          apiRef.current.values,\n          apiRef.current\n        )\n\n        if (checkLatest()) {\n          apiRef.current.setMeta({ isValidating: false })\n          if (typeof error !== 'undefined') {\n            if (error) {\n              if (typeof error === 'string') {\n                apiRef.current.setMeta({ error })\n              }\n            } else {\n              apiRef.current.setMeta({ error: null })\n            }\n          }\n          metaRef.current.validationResolve()\n        }\n      } catch (err) {\n        if (checkLatest()) {\n          metaRef.current.validationReject(err)\n        }\n      } finally {\n        delete metaRef.current.validationPromise\n      }\n    }\n\n    doValidation()\n\n    return metaRef.current.validationPromise\n  }, [])\n\n  const getFieldValue = React.useCallback(\n    field => getBy(apiRef.current.values, field),\n    []\n  )\n\n  const getFieldMeta = React.useCallback(field => {\n    const fieldID = getFieldID(field)\n    return apiRef.current.__fieldMeta[fieldID]\n  }, [])\n\n  const __getFieldMetaRef = React.useCallback(field => {\n    const fieldID = getFieldID(field)\n    if (!apiRef.current.__fieldMetaRefs[fieldID]) {\n      apiRef.current.__fieldMetaRefs[fieldID] = {\n        current: {\n          instanceRefs: {},\n        },\n      }\n    }\n    return apiRef.current.__fieldMetaRefs[fieldID]\n  }, [])\n\n  const setFieldMeta = React.useCallback(\n    (field, updater) => {\n      const fieldID = getFieldID(field)\n      setState(old => {\n        const newFieldMeta =\n          typeof updater === 'function'\n            ? updater(old.__fieldMeta[fieldID])\n            : { ...old.__fieldMeta[fieldID], ...updater }\n\n        return {\n          ...old,\n          // Any errors in fields should visually stop\n          // form.isSubmitting\n          meta:\n            newFieldMeta && newFieldMeta.error\n              ? {\n                  ...old.meta,\n                  isSubmitting: false,\n                }\n              : old.meta,\n          __fieldMeta: {\n            ...old.__fieldMeta,\n            [fieldID]: newFieldMeta,\n          },\n        }\n      })\n    },\n    [setState]\n  )\n\n  const setFieldValue = React.useCallback(\n    (field, updater, { isTouched = true } = {}) => {\n      const fieldInstances = apiRef.current.__getFieldInstances(field)\n\n      setState(old => {\n        let newValue =\n          typeof updater === 'function'\n            ? updater(getBy(old.values, field))\n            : updater\n\n        fieldInstances.forEach(instance => {\n          if (instance.current.__filterValue) {\n            newValue = instance.current.__filterValue(newValue, apiRef.current)\n          }\n        })\n\n        return {\n          ...old,\n          values: setBy(old.values, field, newValue),\n        }\n      })\n      if (isTouched) {\n        apiRef.current.setFieldMeta(field, {\n          isTouched: true,\n        })\n        apiRef.current.setMeta({ isTouched: true })\n      }\n    },\n    [setState]\n  )\n\n  const __getFieldInstances = React.useCallback(field => {\n    const __metaRef = apiRef.current.__getFieldMetaRef(field)\n    return Object.keys(__metaRef.current.instanceRefs).map(\n      key => __metaRef.current.instanceRefs[key]\n    )\n  }, [])\n\n  const pushFieldValue = React.useCallback((field, value, options) => {\n    apiRef.current.setFieldValue(\n      field,\n      old => {\n        return [...(Array.isArray(old) ? old : []), value]\n      },\n      options\n    )\n  }, [])\n\n  const insertFieldValue = React.useCallback((field, index, value, options) => {\n    apiRef.current.setFieldValue(\n      field,\n      old => {\n        if (Array.isArray(old)) {\n          return old.map((d, i) => (i === index ? value : d))\n        } else {\n          throw Error(\n            `Cannot insert a field value into a non-array field. Check that this field's existing value is an array: ${field}.`\n          )\n        }\n      },\n      options\n    )\n  }, [])\n\n  const removeFieldValue = React.useCallback((field, index, options) => {\n    apiRef.current.setFieldValue(\n      field,\n      old => {\n        if (Array.isArray(old)) {\n          return old.filter((d, i) => i !== index)\n        } else {\n          throw Error(\n            `Cannot remove a field value from a non-array field. Check that this field's existing value is an array: ${field}.`\n          )\n        }\n      },\n      options\n    )\n  }, [])\n\n  const swapFieldValues = React.useCallback(\n    (path, index1, index2) => {\n      setState(old => {\n        const old1 = getBy(old.values, [path, index1])\n        const old2 = getBy(old.values, [path, index2])\n\n        let values = setBy(old.values, [path, index1], old2)\n        values = setBy(values, [path, index2], old1)\n\n        return {\n          ...old,\n          values,\n        }\n      })\n    },\n    [setState]\n  )\n\n  const setValues = React.useCallback(\n    values => {\n      setState(old => ({\n        ...old,\n        values: values,\n      }))\n    },\n    [setState]\n  )\n\n  // Create the Form element if necessary\n  const Form = useFormElement(api)\n\n  Object.assign(api, {\n    __fieldMetaRefs: __fieldMetaRefsRef.current,\n    onSubmit,\n    reset,\n    handleSubmit,\n    debounce,\n    setMeta,\n    runValidation,\n    getFieldValue,\n    getFieldMeta,\n    __getFieldMetaRef,\n    setFieldMeta,\n    setFieldValue,\n    __getFieldInstances,\n    pushFieldValue,\n    insertFieldValue,\n    removeFieldValue,\n    swapFieldValues,\n    setValues,\n    Form,\n    formContext: api,\n  })\n\n  // If shouldResubmit is true, do yo thang\n  React.useEffect(() => {\n    if (shouldResubmit) {\n      handleSubmit(shouldResubmit)\n      setShouldResubmit(false)\n    }\n  }, [handleSubmit, shouldResubmit])\n\n  // When the form gets dirty and when the value changes\n  // validate\n  React.useEffect(() => {\n    if (!validatePristine && !meta.isTouched) {\n      return\n    }\n\n    apiRef.current.runValidation(values)\n  }, [meta.isTouched, validatePristine, values])\n\n  // When defaultValues update, set them\n  React.useEffect(() => {\n    if (defaultValues !== apiRef.current.values) {\n      setState(old => ({\n        ...old,\n        values: defaultValues,\n      }))\n    }\n  }, [defaultValues, setState])\n\n  // Return the root form and the Form component to the hook user\n  return apiRef.current\n}\n","import React from 'react'\n//\n\nimport { FormContextProvider } from './useFormContext'\n\nexport default function useFieldScope(contextValue) {\n  const FieldScopeRef = React.useRef()\n  const FieldScopeApiRef = React.useRef()\n\n  FieldScopeApiRef.current = contextValue\n\n  // Create a new form element\n  if (!FieldScopeRef.current) {\n    FieldScopeRef.current = function Field({ children }) {\n      return (\n        <FormContextProvider value={FieldScopeApiRef.current}>\n          {children}\n        </FormContextProvider>\n      )\n    }\n  }\n\n  return FieldScopeRef.current\n}\n","import React from 'react'\n//\nimport useAsyncDebounce from './useAsyncDebounce'\nimport useFormContext from './useFormContext'\nimport useFieldScope from './useFieldScope'\nimport { getFieldID } from '../utils'\n\nlet uid = 0\n\nconst methodMap = [\n  'setFieldValue',\n  'setFieldMeta',\n  'pushFieldValue',\n  'insertFieldValue',\n  'removeFieldValue',\n  'swapFieldValues',\n]\n\nconst defaultDefaultMeta = {\n  error: null,\n  isTouched: false,\n  isValidating: false,\n}\n\nexport default function useField(\n  fieldName,\n  {\n    defaultValue,\n    defaultIsTouched = false,\n    defaultError = null,\n    defaultMeta = defaultDefaultMeta,\n    validatePristine,\n    validate,\n    filterValue,\n    formContext: manualFormContext,\n  } = {}\n) {\n  if (!fieldName) {\n    throw new Error(\n      `useField: A field is required to use this hook. eg, useField('myField', options)`\n    )\n  }\n\n  const formApiRef = React.useRef()\n  const fieldApiRef = React.useRef({})\n\n  let formApi = useFormContext(manualFormContext)\n\n  const instanceIDRef = React.useRef(uid++)\n  const instanceID = instanceIDRef.current\n\n  // Support field prefixing from FieldScope\n  let fieldPrefix = ''\n  if (formApi.fieldName) {\n    fieldPrefix = `${formApi.fieldName}.`\n    formApi = formApi.form\n  }\n  fieldName = fieldPrefix + fieldName\n\n  // Create a debounce for this field hook instance (not all instances)\n  const debounce = useAsyncDebounce()\n\n  // An escape hatch for accessing latest formAPI\n  formApiRef.current = formApi\n\n  // Get the field value, meta, and metaRef\n  const preValue = formApi.getFieldValue(fieldName)\n  const preMeta = formApi.getFieldMeta(fieldName)\n  const __metaRef = formApi.__getFieldMetaRef(fieldName)\n\n  // Handle default value\n  const value = React.useMemo(\n    () =>\n      typeof preValue === 'undefined' && typeof defaultValue !== 'undefined'\n        ? defaultValue\n        : preValue,\n    [defaultValue, preValue]\n  )\n\n  // Handle default meta\n  const meta = React.useMemo(\n    () =>\n      typeof preMeta === 'undefined'\n        ? {\n            ...defaultMeta,\n            error: defaultError,\n            isTouched: defaultIsTouched,\n          }\n        : preMeta,\n    [defaultError, defaultMeta, defaultIsTouched, preMeta]\n  )\n\n  // Create the fieldApi\n  const fieldApi = React.useMemo(\n    () => ({\n      value,\n      meta,\n      form: formApi,\n      fieldName,\n    }),\n    [fieldName, formApi, meta, value]\n  )\n\n  // Keep the fieldApiRef up to date\n  fieldApiRef.current = fieldApi\n  fieldApiRef.current.__filterValue = filterValue\n  fieldApiRef.current.__validate = validate\n\n  // Let's scope some field-level methods for convenience\n  const [\n    setValue,\n    setMeta,\n    pushValue,\n    insertValue,\n    removeValue,\n    swapValues,\n  ] = methodMap.map(d => {\n    // Since this array is stable and always the same, we can disable\n    // the react-hooks linter here:\n\n    // eslint-disable-next-line\n    return React.useCallback(\n      (...args) => formApiRef.current[d](fieldName, ...args),\n      // eslint-disable-next-line\n      [fieldName]\n    )\n  })\n\n  // Let's scope some field-level methods for convenience\n  const [\n    setFieldValue,\n    setFieldMeta,\n    pushFieldValue,\n    insertFieldValue,\n    removeFieldValue,\n    swapFieldValues,\n  ] = methodMap.map(d => {\n    // Since this array is stable and always the same, we can disable\n    // the react-hooks linter here:\n\n    // eslint-disable-next-line\n    return React.useCallback(\n      (subField, ...args) =>\n        formApiRef.current[d](`${fieldName}.${subField}`, ...args),\n      // eslint-disable-next-line\n      [fieldName]\n    )\n  })\n\n  const runValidation = React.useCallback(async () => {\n    if (!fieldApiRef.current.__validate) {\n      return\n    }\n    setMeta({ isValidating: true })\n\n    // Use the validationCount for all field instances to\n    // track freshness of the validation\n    const id = (__metaRef.current.validationCount || 0) + 1\n    __metaRef.current.validationCount = id\n\n    const checkLatest = () => id === __metaRef.current.validationCount\n\n    if (!__metaRef.current.validationPromise) {\n      __metaRef.current.validationPromise = new Promise((resolve, reject) => {\n        __metaRef.current.validationResolve = resolve\n        __metaRef.current.validationReject = reject\n      })\n    }\n\n    const doValidate = async () => {\n      try {\n        const error = await fieldApiRef.current.__validate(\n          fieldApiRef.current.value,\n          fieldApiRef.current\n        )\n\n        if (checkLatest()) {\n          setMeta({ isValidating: false })\n          if (typeof error !== 'undefined') {\n            if (error) {\n              if (typeof error === 'string') {\n                setMeta({ error })\n              }\n            } else {\n              setMeta({ error: null })\n            }\n          }\n          __metaRef.current.validationResolve()\n        }\n      } catch (error) {\n        if (checkLatest()) {\n          __metaRef.current.validationReject(error)\n          throw error\n        }\n      } finally {\n        if (checkLatest()) {\n          setMeta({ isValidating: false })\n          delete __metaRef.current.validationPromise\n        }\n      }\n    }\n\n    doValidate()\n\n    return __metaRef.current.validationPromise\n  }, [__metaRef, setMeta])\n\n  const getInputProps = React.useCallback(\n    ({ onChange, onBlur, ...rest } = {}) => {\n      return {\n        value,\n        onChange: e => {\n          setValue(e.target.value)\n          if (onChange) {\n            onChange(e)\n          }\n        },\n        onBlur: e => {\n          setMeta({ isTouched: true })\n          if (onBlur) {\n            onBlur(e)\n          }\n        },\n        ...rest,\n      }\n    },\n    [setMeta, setValue, value]\n  )\n\n  const FieldScope = useFieldScope(fieldApi)\n\n  // Fill in the rest of the fieldApi\n  Object.assign(fieldApi, {\n    __metaRef,\n    setValue,\n    setMeta,\n    pushValue,\n    insertValue,\n    removeValue,\n    swapValues,\n    setFieldValue,\n    setFieldMeta,\n    pushFieldValue,\n    insertFieldValue,\n    removeFieldValue,\n    swapFieldValues,\n    debounce,\n    runValidation,\n    getInputProps,\n    FieldScope,\n  })\n\n  React.useEffect(() => {\n    const { current: meta } = formApiRef.current.__getFieldMetaRef(fieldName)\n\n    meta.instanceRefs = meta.instanceRefs || {}\n    meta.instanceRefs[instanceID] = fieldApiRef\n\n    const fieldID = getFieldID(fieldName)\n\n    return () => {\n      delete meta.instanceRefs[instanceID]\n      if (!Object.keys(meta.instanceRefs).length) {\n        fieldApiRef.current.setMeta(() => undefined)\n        delete formApiRef.current.__fieldMetaRefs[fieldID]\n      }\n    }\n  }, [fieldName, instanceID])\n\n  // The default value effect handler\n  React.useEffect(() => {\n    if (typeof preValue === 'undefined' && typeof value !== 'undefined') {\n      setValue(value, { isTouched: false })\n    }\n  }, [preValue, setValue, value])\n\n  // The default meta effect handler\n  React.useEffect(() => {\n    if (typeof preMeta === 'undefined' && typeof meta !== 'undefined') {\n      setMeta(meta)\n    }\n  }, [fieldName, meta, preMeta, setMeta, setValue, value])\n\n  // When the form gets dirty and when the value changes, run the validation\n  React.useEffect(() => {\n    if (!validatePristine && !meta.isTouched) {\n      return\n    }\n\n    try {\n      runValidation(value)\n    } catch (err) {\n      console.error('An error occurred during validation', err)\n    }\n  }, [meta.isTouched, runValidation, validatePristine, value])\n\n  return fieldApiRef.current\n}\n"],"names":["useAsyncDebounce","defaultFn","defaultWait","debounceRef","React","useRef","current","debounce","useCallback","fn","wait","promise","Promise","resolve","timeout","clearTimeout","setTimeout","reject","formContext","createContext","FormContextProvider","value","children","useFormContext","manualFormContext","formApi","useContext","Error","useFormElement","contextValue","FormRef","FormApiRef","Form","noFormElement","rest","handleSubmit","isSubmitting","meta","debugForm","margin","fontWeight","JSON","stringify","undefined","safeStringifyReplace","Set","set","key","Array","isArray","has","add","splitFormProps","field","defaultValue","defaultIsTouched","defaultError","defaultMeta","validatePristine","validate","onSubmit","defaultValues","filterValue","getBy","obj","path","pathArray","makePathArray","pathObj","reduce","pathPart","setBy","updater","doSet","parent","length","shift","prefix","slice","getFieldID","str","join","reFindNumbers0","reFindNumbers1","reFindNumbers2","reFindNumbers3","reFindMultiplePeriods","replace","split","map","d","indexOf","parseInt","substring","loopObject","callback","Object","keys","forEach","someObject","found","result","defaultDefaultValue","makeState","decor","isTouched","isSubmitted","submissionAttempts","__fieldMeta","useForm","useState","values","setState","shouldResubmit","setShouldResubmit","apiRef","metaRef","__fieldMetaRefsRef","fieldsAreValidating","isValidating","fieldsAreValid","error","isValid","canSubmit","useMemo","api","reset","e","persist","preventDefault","__handled","setMeta","needsResubmit","fieldValidationPromises","__fieldMetaRefs","fieldMeta","instanceRefs","fieldInstance","__validate","push","runValidation","old","all","id","validationCount","checkLatest","validationPromise","validationResolve","validationReject","doValidation","getFieldValue","getFieldMeta","fieldID","__getFieldMetaRef","setFieldMeta","newFieldMeta","setFieldValue","fieldInstances","__getFieldInstances","newValue","instance","__filterValue","__metaRef","pushFieldValue","options","insertFieldValue","index","i","removeFieldValue","filter","swapFieldValues","index1","index2","old1","old2","setValues","assign","useEffect","useFieldScope","FieldScopeRef","FieldScopeApiRef","Field","uid","methodMap","defaultDefaultMeta","useField","fieldName","formApiRef","fieldApiRef","instanceIDRef","instanceID","fieldPrefix","form","preValue","preMeta","fieldApi","args","setValue","pushValue","insertValue","removeValue","swapValues","subField","doValidate","getInputProps","onChange","onBlur","target","FieldScope","err","console"],"mappings":"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"}